
# comando de compose para crear proyecto, estrutura con lumen que es un microframework de lavarel que utiliza instrucciones para la creacion de aplicaciones 
#info https://lumen.laravel.com/docs/9.x

composer create-project --prefer-dist laravel/lumen apirest-servi_autos

# verificacion en el navegador 
http://localhost/apirest-servi_autos/public/

CONFIGURAR .env
DB_DATABASE=registros  // es la base de datos creada previamente en localhost/phpMyAdmin
DB_USERNAME=root  // es el nombre del usuario cuando configuramos heidi
DB_PASSWORD=  // se deja el campo vacio por ahora




CREACION DE TABLAS 
# Creacion de entidades por medio de migraciones.
# En terminal hacer: vamos a crea un atbla nueva en la base de datos clientes ya vinculada en .env

php artisan make:migration registroclientes --create=registroclientes

#Tabla registroautos

php artisan make:migration registroautos --create=registroautos


# En apirest-servi_autos/database/migrations se crea automaticamen un archivo php de la tabla registroautos recien creada
# en el archivo se crea por defecto un constructor que sera el marco de construccion de la tabla

# empezamos creando los campos nombres, apellidos, contraseña2, correo y foto en el constructor de la tabla , asi:
    public function up()
    {
        Schema::create('registroclientes', function (Blueprint $table) {
            $table->id(); //Campo auto-numerico
            $table->string('correo', 50); // Se crea un nuevo campo nombre en  la tabla 
            $table->string('contraseña', 50); // Se crea un nuevo campo contraseña en  la tabla 
            $table->string('contraseña2', 50); // Se crea un nuevo campo contraseña2 en  la tabla
            $table->timestamps();
        });
    }

# Creacion de la tabla en la base de datos 

php artisan migrate


# Sobre el entorno de VS code dar ctrl+ship + P y colocamos el siguiente comando para crear modelos
Lumen:Create Model
ingresamod el nombre de modelo :  registroClientes
ingresamod el nombre de la tabla :  registroclientes // igual que la tabla de la base de datos "clientes"
Crear modelo Y/N decir que "yes"

ingresamos el nombre de "controller  Name" :  Controler_registroclientes  //pareacer el archivo controlador

# en la carpeta app/Http/Controllers  se crea un archivo llamado:
Controler_registroclientes.php

#a continuacion vamos app/models/ y encontramos un nuevo archivo llamado "registroclientes.php "
# ingresamos al archivo 


# Vamos interactuar con nuestra base de datos desde la aplicacion  utilizando un ORM (Modelo de programacion que ayuda a mapear objetos  relacionales)

# Dentro de apirest-1864/boostrap  ingresamos a  app.php y activamos(de-comentamos) la linea 28, asi.

$app->withEloquent(); /*Es un ORM que faciliata la comunicacion con la base de datos mysql por medio del archivo Controler_registroclientes*

#Vamos al archivo Controler_registroclientes para crear una funcion que lea todos los datos de la tabla "registroclientes" que retorne una respuesta en formato json de los datos de la variable "$dataClientes"
# asi

class Controler_registroclientes extends Controller{
    public function verClientes(){
        $dataClientes = registroclientes::all();  // la var. $dataClientesguarda todo los datos de la tabla registroclientes
        return response()->json($dataClientes); // Retorna una respuesta en formato json de los datos de la variable "$dataClientes"
    }

}

# Vamos a apirest-1864/routes y abrios el archivo web.php y accedemos a la tabla listacliente como una url, asi
$router->get('registroclientes','Controler_registroclientes@verClientes' ) ;

# Vamos al navegador http://localhost/apirest-1864/public/registroclientes y observamo los datos de la tabla en formato json

[{"id":1,"nombres":"Oscar","apellidos":"Porto Solano","telefono":"555555555","correo":"oscar@gmai.com","foto":"\/fotos\/foto.png\r\n","created_at":"2022-11-29T00:50:44.000000Z","updated_at":"2022-11-29T00:50:45.000000Z"},{"id":2,"nombres":"Cristian David","apellidos":"Fernandez","telefono":"dffsdsf","correo":"cris@gmail.com","foto":"","created_at":"2022-11-29T00:59:53.000000Z","updated_at":"2022-11-29T00:59:53.000000Z"}]


# Tarea descargar Postman que sirve como un FrontEnd para consumir nuestra API y poder provar, construir y diseñar la API otra alternativa es 
#insomnia



_______________________________________________________________________________________________
22/11/2022  Martes

# Abrimos Postman , ambos a APIS  en el panel izquierdo , luego abrimos un requerimiento en el panel celtral don hay un signo  +
# El panel permite elegir diferentes metodos REST desde GET hasta VIEW, primero vamos al navegador y pegamos la sigiente direcion 

http://127.0.0.1/apirest-servi_autos/public/registroclientes


# revisamos que este respodio el contenido de la tabla en fromato json, ahora vamos al Postman y una vez selecionado el metodo get ingresamo la direcion
# anterion , para observar los datos mas organizados una vez damos click en enviar observamos lo siguiente en postma 

[
    {
        "id": 1,
        "correo": "andres@gmail.com",
        "contraseña": "44444444",
        "contraseña2": "55555555",
        "created_at": null,
        "updated_at": null
    }
]

#INGRESO DE INFORMACION
# ahora vamos a ingresar informacion atravez del metodo por 
#vamos  a routes/web.php y agregamos las siguientes lieneas de codigo 

// Insertar informacion 
$router->post('registroclientes','Controler_registroClientes@insertar');

# Ahora vamos al controlador "Controler_registroClientes.php" y agregamos el siguiente codigo en el interior del constructor 
    
    public function insertar(Request $request){
        return response()->json('En nuestra funcion insertar');

    }


# Sobre el entorno de VS code dar ctrl+ship + P y colocamos el siguiente comando pra crear modelos
Lumen:Create Model
ingresamod el nombre de modelo :  registroclientes
ingresamod el nombre de la tabla :  registroclientes // igual que la tabla de la base de datos "clientes"
Crear modelo Y/N decir que "yes"

ingresamos el nombre de "controller  Name" :  Controler_registroclientes  //pareacer el archivo controlador
